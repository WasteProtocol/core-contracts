/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WastePriceProvider,
  WastePriceProviderInterface,
} from "../../../contracts/core/WastePriceProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "relayer_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouterCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "getWastePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "requestWastePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requestWasteType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRelayer",
        type: "address",
      },
    ],
    name: "setRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setWastePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "testFulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "wastePrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x600580546001600160a01b03191673a9d587a00a31a52ed70d6026794a8fc5e2f5dcb01790557f66756e2d6176616c616e6368652d66756a692d310000000000000000000000006006556007805463ffffffff1916620493e017905561020060405261013360a08181529062001c4e60c039600a90620000809082620002f1565b503480156200008e57600080fd5b5060405162001d8138038062001d81833981016040819052620000b191620003bd565b6005546001600160a01b03166080523380600081620001175760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156200014a576200014a81620001a1565b5050600780546001600160a01b039093166c01000000000000000000000000026001600160601b036001600160401b03909516640100000000029490941663ffffffff909316929092179290921790555062000412565b336001600160a01b03821603620001fb5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200010e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027757607f821691505b6020821081036200029857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ec57600081815260208120601f850160051c81016020861015620002c75750805b601f850160051c820191505b81811015620002e857828155600101620002d3565b5050505b505050565b81516001600160401b038111156200030d576200030d6200024c565b62000325816200031e845462000262565b846200029e565b602080601f8311600181146200035d5760008415620003445750858301515b600019600386901b1c1916600185901b178555620002e8565b600085815260208120601f198616915b828110156200038e578886015182559484019460019091019084016200036d565b5085821015620003ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008060408385031215620003d157600080fd5b82516001600160401b0381168114620003e957600080fd5b60208401519092506001600160a01b03811681146200040757600080fd5b809150509250929050565b608051611819620004356000396000818161025d0152610c0a01526118196000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637f27b9e511610097578063b1e2174911610066578063b1e2174914610203578063e4b1e43c1461020c578063f2fde38b1461021f578063fa67f9ca1461023257600080fd5b80637f27b9e51461019a5780638406c079146101ad5780638da5cb5b146101df578063af70ad80146101f057600080fd5b80633944ea3a116100d35780633944ea3a146101625780634b0795a8146101775780636548e9bc1461017f57806379ba50971461019257600080fd5b80630ca76175146100fa57806338e7ebf51461010f57806338feb68814610142575b600080fd5b61010d61010836600461141b565b610252565b005b61012f61011d366004611487565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b61012f610150366004611487565b60086020526000908152604090205481565b61016a6102d6565b60405161013991906114e6565b61016a610364565b61010d61018d3660046114f9565b610371565b61010d610401565b61010d6101a836600461141b565b6104ab565b6007546101c790600160601b90046001600160a01b031681565b6040516001600160a01b039091168152602001610139565b6000546001600160a01b03166101c7565b61010d6101fe366004611522565b6104bb565b61012f60025481565b61010d61021a366004611487565b610512565b61010d61022d3660046114f9565b6106fb565b61012f610240366004611487565b60009081526008602052604090205490565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461029b5760405163c6829f8360e01b815260040160405180910390fd5b6102a683838361070f565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b600380546102e390611544565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611544565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b505050505081565b600480546102e390611544565b61037961080b565b6001600160a01b0381166103d45760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642052454c41594552206164647265737300000000000000000060448201526064015b60405180910390fd5b600780546001600160a01b03909216600160601b026bffffffffffffffffffffffff909216919091179055565b6001546001600160a01b031633146104545760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016103cb565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6104b683838361070f565b505050565b6104c361080b565b60008281526008602090815260409182902083905581518481529081018390527f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838910160405180910390a15050565b600754600160601b90046001600160a01b031633146105735760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206973206e6f74207468652052454c415945520000000000000060448201526064016103cb565b6105b46040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b610651600a80546105c490611544565b80601f01602080910402602001604051908101604052809291908181526020018280546105f090611544565b801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b50505050508261086090919063ffffffff16565b604080516001808252818301909252600091816020015b606081526020019060019003908161066857905050905061068883610871565b8160008151811061069b5761069b61157e565b60209081029190910101526106b08282610903565b6106e06106bc8361092d565b6007546006546001600160401b036401000000008304169163ffffffff1690610c05565b60028190556000908152600960205260409020929092555050565b61070361080b565b61070c81610cd7565b50565b60008381526009602052604081205490036107605760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c995c5d595cdd1259607a1b60448201526064016103cb565b6000838152600960205260408120549061077984611594565b600083815260086020526040908190208290555190915085907ffc03b1503acd478faf9c08107596f6d5c04b4591fea84f8d6f21bdf613b5370e906107c3908590889088906115b8565b60405180910390a260408051838152602081018390527f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838910160405180910390a15050505050565b6000546001600160a01b0316331461085e5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016103cb565b565b61086d8260008084610d80565b5050565b6060600061087e83610dfe565b60010190506000816001600160401b0381111561089d5761089d611379565b6040519080825280601f01601f1916602001820160405280156108c7576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846108d157509392505050565b80516000036109255760405163fe936cb760e01b815260040160405180910390fd5b60a090910152565b6060600061093c610100610ed7565b90506109756040518060400160405280600c81526020016b31b7b232a637b1b0ba34b7b760a11b81525082610ef890919063ffffffff16565b825161099390600281111561098c5761098c6115ed565b8290610f11565b6040805180820190915260088152676c616e677561676560c01b60208201526109bd908290610ef8565b60408301516109d490801561098c5761098c6115ed565b604080518082019091526006815265736f7572636560d01b60208201526109fc908290610ef8565b6060830151610a0c908290610ef8565b60a08301515115610aa0576040805180820190915260048152636172677360e01b6020820152610a3d908290610ef8565b610a4681610f4a565b60005b8360a0015151811015610a9657610a868460a001518281518110610a6f57610a6f61157e565b602002602001015183610ef890919063ffffffff16565b610a8f81611619565b9050610a49565b50610aa081610f6e565b60808301515115610b6457600083602001516002811115610ac357610ac36115ed565b03610ae15760405163a80d31f760e01b815260040160405180910390fd5b60408051808201909152600f81526e39b2b1b932ba39a637b1b0ba34b7b760891b6020820152610b12908290610ef8565b610b2b8360200151600281111561098c5761098c6115ed565b6040805180820190915260078152667365637265747360c81b6020820152610b54908290610ef8565b6080830151610b64908290610f8c565b60c08301515115610bfd5760408051808201909152600981526862797465734172677360b81b6020820152610b9a908290610ef8565b610ba381610f4a565b60005b8360c0015151811015610bf357610be38460c001518281518110610bcc57610bcc61157e565b602002602001015183610f8c90919063ffffffff16565b610bec81611619565b9050610ba6565b50610bfd81610f6e565b515192915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b8152600401610c5d959493929190611632565b6020604051808303816000875af1158015610c7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca0919061167b565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b336001600160a01b03821603610d2f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103cb565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b8051600003610da2576040516322ce3edd60e01b815260040160405180910390fd5b83836002811115610db557610db56115ed565b90816002811115610dc857610dc86115ed565b90525060408401828015610dde57610dde6115ed565b90818015610dee57610dee6115ed565b9052506060909301929092525050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e3d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e69576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e8757662386f26fc10000830492506010015b6305f5e1008310610e9f576305f5e100830492506008015b6127108310610eb357612710830492506004015b60648310610ec5576064830492506002015b600a8310610ed1576001015b92915050565b610edf611344565b8051610eeb9083610f99565b5060006020820152919050565b610f058260038351611010565b81516104b6908261112f565b8151610f1e9060c2611157565b5061086d8282604051602001610f3691815260200190565b604051602081830303815290604052610f8c565b610f558160046111c0565b600181602001818151610f689190611694565b90525050565b610f798160076111c0565b600181602001818151610f6891906116a7565b610f058260028351611010565b604080518082019091526060815260006020820152610fb96020836116ba565b15610fe157610fc96020836116ba565b610fd49060206116a7565b610fde9083611694565b91505b60208084018390526040518085526000815290818401018181101561100557600080fd5b604052509192915050565b6017816001600160401b03161161103c5782516110369060e0600585901b168317611157565b50505050565b60ff816001600160401b03161161107c578251611064906018611fe0600586901b1617611157565b508251611036906001600160401b03831660016111d7565b61ffff816001600160401b0316116110bd5782516110a5906019611fe0600586901b1617611157565b508251611036906001600160401b03831660026111d7565b63ffffffff816001600160401b0316116111005782516110e890601a611fe0600586901b1617611157565b508251611036906001600160401b03831660046111d7565b825161111790601b611fe0600586901b1617611157565b508251611036906001600160401b03831660086111d7565b6040805180820190915260608152600060208201526111508383845161125c565b9392505050565b604080518082019091526060815260006020820152825151600061117c826001611694565b90508460200151821061119d5761119d856111988360026116dc565b61132d565b84516020838201018581535080518211156111b6578181525b5093949350505050565b81516104b690601f611fe0600585901b1617611157565b60408051808201909152606081526000602082015283515160006111fb8285611694565b9050856020015181111561121857611218866111988360026116dc565b60006001611228866101006117d7565b61123291906116a7565b90508651828101878319825116178152508051831115611250578281525b50959695505050505050565b604080518082019091526060815260006020820152825182111561127f57600080fd5b835151600061128e8483611694565b905085602001518111156112ab576112ab866111988360026116dc565b8551805183820160200191600091808511156112c5578482525b505050602086015b6020861061130557805182526112e4602083611694565b91506112f1602082611694565b90506112fe6020876116a7565b95506112cd565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b81516113398383610f99565b50611036838261112f565b604051806040016040528061136c604051806040016040528060608152602001600081525090565b8152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126113a057600080fd5b81356001600160401b03808211156113ba576113ba611379565b604051601f8301601f19908116603f011681019082821181831017156113e2576113e2611379565b816040528381528660208588010111156113fb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561143057600080fd5b8335925060208401356001600160401b038082111561144e57600080fd5b61145a8783880161138f565b9350604086013591508082111561147057600080fd5b5061147d8682870161138f565b9150509250925092565b60006020828403121561149957600080fd5b5035919050565b6000815180845260005b818110156114c6576020818501810151868301820152016114aa565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061115060208301846114a0565b60006020828403121561150b57600080fd5b81356001600160a01b038116811461115057600080fd5b6000806040838503121561153557600080fd5b50508035926020909101359150565b600181811c9082168061155857607f821691505b60208210810361157857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b805160208083015191908110156115785760001960209190910360031b1b16919050565b8381526060602082015260006115d160608301856114a0565b82810360408401526115e381856114a0565b9695505050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161162b5761162b611603565b5060010190565b6001600160401b038616815260a06020820152600061165460a08301876114a0565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b60006020828403121561168d57600080fd5b5051919050565b80820180821115610ed157610ed1611603565b81810381811115610ed157610ed1611603565b6000826116d757634e487b7160e01b600052601260045260246000fd5b500690565b8082028115828204841417610ed157610ed1611603565b600181815b8085111561172e57816000190482111561171457611714611603565b8085161561172157918102915b93841c93908002906116f8565b509250929050565b60008261174557506001610ed1565b8161175257506000610ed1565b816001811461176857600281146117725761178e565b6001915050610ed1565b60ff84111561178357611783611603565b50506001821b610ed1565b5060208310610133831016604e8410600b84101617156117b1575081810a610ed1565b6117bb83836116f3565b80600019048211156117cf576117cf611603565b029392505050565b6000611150838361173656fea26469706673582212200ba49c4f3bb9530e7797e029d7b37a42ce3c7640de503d94e6df3dce7f5ac59264736f6c63430008130033636f6e737420776173746554797065203d20617267735b305d3b636f6e737420617069526573706f6e7365203d2061776169742046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a206068747470733a2f2f6170692e776173746570726963696e672e636f6d2f247b7761737465547970657d607d293b69662028617069526573706f6e73652e6572726f7229207b7468726f77204572726f72286052657175657374206661696c656460293b7d636f6e7374207b2064617461207d203d20617069526573706f6e73653b636f6e7374207072696365203d204d6174682e666c6f6f7228646174612e7072696365202a204d6174682e706f772831302c313829293b72657475726e2046756e6374696f6e732e656e636f646555696e74323536287072696365293b";

type WastePriceProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WastePriceProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WastePriceProvider__factory extends ContractFactory {
  constructor(...args: WastePriceProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId_: PromiseOrValue<BigNumberish>,
    relayer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WastePriceProvider> {
    return super.deploy(
      subscriptionId_,
      relayer_,
      overrides || {}
    ) as Promise<WastePriceProvider>;
  }
  override getDeployTransaction(
    subscriptionId_: PromiseOrValue<BigNumberish>,
    relayer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId_,
      relayer_,
      overrides || {}
    );
  }
  override attach(address: string): WastePriceProvider {
    return super.attach(address) as WastePriceProvider;
  }
  override connect(signer: Signer): WastePriceProvider__factory {
    return super.connect(signer) as WastePriceProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WastePriceProviderInterface {
    return new utils.Interface(_abi) as WastePriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WastePriceProvider {
    return new Contract(address, _abi, signerOrProvider) as WastePriceProvider;
  }
}
