/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WastePriceProvider,
  WastePriceProviderInterface,
} from "../../../contracts/core/WastePriceProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "relayer_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouterCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "Response",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "getWastePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "requestWastePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requestWasteType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRelayer",
        type: "address",
      },
    ],
    name: "setRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "testFulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "wastePrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x600580546001600160a01b03191673a9d587a00a31a52ed70d6026794a8fc5e2f5dcb01790557f66756e2d6176616c616e6368652d66756a692d310000000000000000000000006006556007805463ffffffff1916620493e017905561020060405261013360a08181529062001bb760c039600a90620000809082620002f1565b503480156200008e57600080fd5b5060405162001cea38038062001cea833981016040819052620000b191620003bd565b6005546001600160a01b03166080523380600081620001175760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156200014a576200014a81620001a1565b5050600780546001600160a01b039093166c01000000000000000000000000026001600160601b036001600160401b03909516640100000000029490941663ffffffff909316929092179290921790555062000412565b336001600160a01b03821603620001fb5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200010e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027757607f821691505b6020821081036200029857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ec57600081815260208120601f850160051c81016020861015620002c75750805b601f850160051c820191505b81811015620002e857828155600101620002d3565b5050505b505050565b81516001600160401b038111156200030d576200030d6200024c565b62000325816200031e845462000262565b846200029e565b602080601f8311600181146200035d5760008415620003445750858301515b600019600386901b1c1916600185901b178555620002e8565b600085815260208120601f198616915b828110156200038e578886015182559484019460019091019084016200036d565b5085821015620003ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008060408385031215620003d157600080fd5b82516001600160401b0381168114620003e957600080fd5b60208401519092506001600160a01b03811681146200040757600080fd5b809150509250929050565b608051611782620004356000396000818161023f0152610b9501526117826000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637f27b9e51161008c578063b1e2174911610066578063b1e21749146101e5578063e4b1e43c146101ee578063f2fde38b14610201578063fa67f9ca1461021457600080fd5b80637f27b9e51461018f5780638406c079146101a25780638da5cb5b146101d457600080fd5b80633944ea3a116100c85780633944ea3a146101575780634b0795a81461016c5780636548e9bc1461017457806379ba50971461018757600080fd5b80630ca76175146100ef57806338e7ebf51461010457806338feb68814610137575b600080fd5b6101026100fd3660046113a6565b610234565b005b610124610112366004611412565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b610124610145366004611412565b60086020526000908152604090205481565b61015f6102b8565b60405161012e9190611471565b61015f610346565b610102610182366004611484565b610353565b6101026103e3565b61010261019d3660046113a6565b61048d565b6007546101bc90600160601b90046001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b6000546001600160a01b03166101bc565b61012460025481565b6101026101fc366004611412565b61049d565b61010261020f366004611484565b610686565b610124610222366004611412565b60009081526008602052604090205490565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027d5760405163c6829f8360e01b815260040160405180910390fd5b61028883838361069a565b60405183907f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e690600090a2505050565b600380546102c5906114ad565b80601f01602080910402602001604051908101604052809291908181526020018280546102f1906114ad565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b505050505081565b600480546102c5906114ad565b61035b610796565b6001600160a01b0381166103b65760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642052454c41594552206164647265737300000000000000000060448201526064015b60405180910390fd5b600780546001600160a01b03909216600160601b026bffffffffffffffffffffffff909216919091179055565b6001546001600160a01b031633146104365760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016103ad565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b61049883838361069a565b505050565b600754600160601b90046001600160a01b031633146104fe5760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206973206e6f74207468652052454c415945520000000000000060448201526064016103ad565b61053f6040805160e0810190915280600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6105dc600a805461054f906114ad565b80601f016020809104026020016040519081016040528092919081815260200182805461057b906114ad565b80156105c85780601f1061059d576101008083540402835291602001916105c8565b820191906000526020600020905b8154815290600101906020018083116105ab57829003601f168201915b5050505050826107eb90919063ffffffff16565b604080516001808252818301909252600091816020015b60608152602001906001900390816105f3579050509050610613836107fc565b81600081518110610626576106266114e7565b602090810291909101015261063b828261088e565b61066b610647836108b8565b6007546006546001600160401b036401000000008304169163ffffffff1690610b90565b60028190556000908152600960205260409020929092555050565b61068e610796565b61069781610c62565b50565b60008381526009602052604081205490036106eb5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c995c5d595cdd1259607a1b60448201526064016103ad565b60008381526009602052604081205490610704846114fd565b600083815260086020526040908190208290555190915085907ffc03b1503acd478faf9c08107596f6d5c04b4591fea84f8d6f21bdf613b5370e9061074e90859088908890611521565b60405180910390a260408051838152602081018390527f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838910160405180910390a15050505050565b6000546001600160a01b031633146107e95760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016103ad565b565b6107f88260008084610d0b565b5050565b6060600061080983610d89565b60010190506000816001600160401b0381111561082857610828611304565b6040519080825280601f01601f191660200182016040528015610852576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461085c57509392505050565b80516000036108b05760405163fe936cb760e01b815260040160405180910390fd5b60a090910152565b606060006108c7610100610e62565b90506109006040518060400160405280600c81526020016b31b7b232a637b1b0ba34b7b760a11b81525082610e8390919063ffffffff16565b825161091e90600281111561091757610917611556565b8290610e9c565b6040805180820190915260088152676c616e677561676560c01b6020820152610948908290610e83565b604083015161095f90801561091757610917611556565b604080518082019091526006815265736f7572636560d01b6020820152610987908290610e83565b6060830151610997908290610e83565b60a08301515115610a2b576040805180820190915260048152636172677360e01b60208201526109c8908290610e83565b6109d181610ed5565b60005b8360a0015151811015610a2157610a118460a0015182815181106109fa576109fa6114e7565b602002602001015183610e8390919063ffffffff16565b610a1a81611582565b90506109d4565b50610a2b81610ef9565b60808301515115610aef57600083602001516002811115610a4e57610a4e611556565b03610a6c5760405163a80d31f760e01b815260040160405180910390fd5b60408051808201909152600f81526e39b2b1b932ba39a637b1b0ba34b7b760891b6020820152610a9d908290610e83565b610ab68360200151600281111561091757610917611556565b6040805180820190915260078152667365637265747360c81b6020820152610adf908290610e83565b6080830151610aef908290610f17565b60c08301515115610b885760408051808201909152600981526862797465734172677360b81b6020820152610b25908290610e83565b610b2e81610ed5565b60005b8360c0015151811015610b7e57610b6e8460c001518281518110610b5757610b576114e7565b602002602001015183610f1790919063ffffffff16565b610b7781611582565b9050610b31565b50610b8881610ef9565b515192915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663461d27628688600188886040518663ffffffff1660e01b8152600401610be895949392919061159b565b6020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906115e4565b60405190915081907f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db890600090a295945050505050565b336001600160a01b03821603610cba5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103ad565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b8051600003610d2d576040516322ce3edd60e01b815260040160405180910390fd5b83836002811115610d4057610d40611556565b90816002811115610d5357610d53611556565b90525060408401828015610d6957610d69611556565b90818015610d7957610d79611556565b9052506060909301929092525050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dc85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610df4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e1257662386f26fc10000830492506010015b6305f5e1008310610e2a576305f5e100830492506008015b6127108310610e3e57612710830492506004015b60648310610e50576064830492506002015b600a8310610e5c576001015b92915050565b610e6a6112cf565b8051610e769083610f24565b5060006020820152919050565b610e908260038351610f9b565b815161049890826110ba565b8151610ea99060c26110e2565b506107f88282604051602001610ec191815260200190565b604051602081830303815290604052610f17565b610ee081600461114b565b600181602001818151610ef391906115fd565b90525050565b610f0481600761114b565b600181602001818151610ef39190611610565b610e908260028351610f9b565b604080518082019091526060815260006020820152610f44602083611623565b15610f6c57610f54602083611623565b610f5f906020611610565b610f6990836115fd565b91505b602080840183905260405180855260008152908184010181811015610f9057600080fd5b604052509192915050565b6017816001600160401b031611610fc7578251610fc19060e0600585901b1683176110e2565b50505050565b60ff816001600160401b031611611007578251610fef906018611fe0600586901b16176110e2565b508251610fc1906001600160401b0383166001611162565b61ffff816001600160401b031611611048578251611030906019611fe0600586901b16176110e2565b508251610fc1906001600160401b0383166002611162565b63ffffffff816001600160401b03161161108b57825161107390601a611fe0600586901b16176110e2565b508251610fc1906001600160401b0383166004611162565b82516110a290601b611fe0600586901b16176110e2565b508251610fc1906001600160401b0383166008611162565b6040805180820190915260608152600060208201526110db838384516111e7565b9392505050565b60408051808201909152606081526000602082015282515160006111078260016115fd565b9050846020015182106111285761112885611123836002611645565b6112b8565b8451602083820101858153508051821115611141578181525b5093949350505050565b815161049890601f611fe0600585901b16176110e2565b604080518082019091526060815260006020820152835151600061118682856115fd565b905085602001518111156111a3576111a386611123836002611645565b600060016111b386610100611740565b6111bd9190611610565b905086518281018783198251161781525080518311156111db578281525b50959695505050505050565b604080518082019091526060815260006020820152825182111561120a57600080fd5b835151600061121984836115fd565b905085602001518111156112365761123686611123836002611645565b855180518382016020019160009180851115611250578482525b505050602086015b60208610611290578051825261126f6020836115fd565b915061127c6020826115fd565b9050611289602087611610565b9550611258565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b81516112c48383610f24565b50610fc183826110ba565b60405180604001604052806112f7604051806040016040528060608152602001600081525090565b8152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261132b57600080fd5b81356001600160401b038082111561134557611345611304565b604051601f8301601f19908116603f0116810190828211818310171561136d5761136d611304565b8160405283815286602085880101111561138657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156113bb57600080fd5b8335925060208401356001600160401b03808211156113d957600080fd5b6113e58783880161131a565b935060408601359150808211156113fb57600080fd5b506114088682870161131a565b9150509250925092565b60006020828403121561142457600080fd5b5035919050565b6000815180845260005b8181101561145157602081850181015186830182015201611435565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110db602083018461142b565b60006020828403121561149657600080fd5b81356001600160a01b03811681146110db57600080fd5b600181811c908216806114c157607f821691505b6020821081036114e157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b805160208083015191908110156114e15760001960209190910360031b1b16919050565b83815260606020820152600061153a606083018561142b565b828103604084015261154c818561142b565b9695505050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115945761159461156c565b5060010190565b6001600160401b038616815260a0602082015260006115bd60a083018761142b565b61ffff9590951660408301525063ffffffff92909216606083015260809091015292915050565b6000602082840312156115f657600080fd5b5051919050565b80820180821115610e5c57610e5c61156c565b81810381811115610e5c57610e5c61156c565b60008261164057634e487b7160e01b600052601260045260246000fd5b500690565b8082028115828204841417610e5c57610e5c61156c565b600181815b8085111561169757816000190482111561167d5761167d61156c565b8085161561168a57918102915b93841c9390800290611661565b509250929050565b6000826116ae57506001610e5c565b816116bb57506000610e5c565b81600181146116d157600281146116db576116f7565b6001915050610e5c565b60ff8411156116ec576116ec61156c565b50506001821b610e5c565b5060208310610133831016604e8410600b841016171561171a575081810a610e5c565b611724838361165c565b80600019048211156117385761173861156c565b029392505050565b60006110db838361169f56fea2646970667358221220ee7445f3b71b68f7c7d1c34785e2c1ccee7e6f38875027d7bc59c7359db713df64736f6c63430008130033636f6e737420776173746554797065203d20617267735b305d3b636f6e737420617069526573706f6e7365203d2061776169742046756e6374696f6e732e6d616b654874747052657175657374287b75726c3a206068747470733a2f2f6170692e776173746570726963696e672e636f6d2f247b7761737465547970657d607d293b69662028617069526573706f6e73652e6572726f7229207b7468726f77204572726f72286052657175657374206661696c656460293b7d636f6e7374207b2064617461207d203d20617069526573706f6e73653b636f6e7374207072696365203d204d6174682e666c6f6f7228646174612e7072696365202a204d6174682e706f772831302c313829293b72657475726e2046756e6374696f6e732e656e636f646555696e74323536287072696365293b";

type WastePriceProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WastePriceProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WastePriceProvider__factory extends ContractFactory {
  constructor(...args: WastePriceProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId_: PromiseOrValue<BigNumberish>,
    relayer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WastePriceProvider> {
    return super.deploy(
      subscriptionId_,
      relayer_,
      overrides || {}
    ) as Promise<WastePriceProvider>;
  }
  override getDeployTransaction(
    subscriptionId_: PromiseOrValue<BigNumberish>,
    relayer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId_,
      relayer_,
      overrides || {}
    );
  }
  override attach(address: string): WastePriceProvider {
    return super.attach(address) as WastePriceProvider;
  }
  override connect(signer: Signer): WastePriceProvider__factory {
    return super.connect(signer) as WastePriceProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WastePriceProviderInterface {
    return new utils.Interface(_abi) as WastePriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WastePriceProvider {
    return new Contract(address, _abi, signerOrProvider) as WastePriceProvider;
  }
}
