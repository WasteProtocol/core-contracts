/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  WasteSettlement,
  WasteSettlementInterface,
} from "../../../../contracts/core/WasteSettlement.sol/WasteSettlement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wasteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wastePriceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wasteDataProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_socialNodeRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "socialNode",
        type: "address",
      },
    ],
    name: "TradeApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "socialNode",
        type: "address",
      },
    ],
    name: "TradeRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "TradeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TradeSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "approveTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingTrades",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "approver",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "wasteTypeIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "rejected",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalTokenReceived",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalUSDCReceived",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalEmissionAmount",
            type: "uint256",
          },
        ],
        internalType: "struct WasteSettlement.WasteTrade[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTrades",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getTradeList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "approver",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "wasteTypeIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "rejected",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalTokenReceived",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalUSDCReceived",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalEmissionAmount",
            type: "uint256",
          },
        ],
        internalType: "struct WasteSettlement.WasteTrade[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "rejectTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "socialNodeRegistry",
    outputs: [
      {
        internalType: "contract ISocialNodeRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "wasteTypeIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "submitWasteTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trades",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "rejected",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalTokenReceived",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalUSDCReceived",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalEmissionAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_socialNodeRegistry",
        type: "address",
      },
    ],
    name: "updateSocialNodeRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wasteDataProvider",
        type: "address",
      },
    ],
    name: "updateWasteDataProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wastePriceProvider",
        type: "address",
      },
    ],
    name: "updateWastePriceProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasteDataProvider",
    outputs: [
      {
        internalType: "contract IWasteDataProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wastePriceProvider",
    outputs: [
      {
        internalType: "contract IWastePriceProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasteToken",
    outputs: [
      {
        internalType: "contract IWasteToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019653803806200196583398101604081905262000034916200010f565b6200003f33620000a2565b600180546001600160a01b03199081166001600160a01b039788161790915560028054821695871695909517909455600380548516938616939093179092556004805484169185169190911790556005805490921692169190911790556200017f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010a57600080fd5b919050565b600080600080600060a086880312156200012857600080fd5b6200013386620000f2565b94506200014360208701620000f2565b93506200015360408701620000f2565b92506200016360608701620000f2565b91506200017360808701620000f2565b90509295509295909350565b6117d6806200018f6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635a52ac42116100ad578063b6214e0f11610071578063b6214e0f146102f0578063d29d0d4d14610303578063ebd34f5014610316578063eca34dbd1461031e578063f2fde38b1461033157600080fd5b80635a52ac421461029a578063660d15b5146102ad578063715018a6146102c45780638da5cb5b146102cc578063b1278862146102dd57600080fd5b80631e6c598e116100f45780631e6c598e1461018a57806325612867146102415780632928cd941461024957806338ac5655146102745780633e413bee1461028757600080fd5b806301663e5914610126578063062281c01461013b57806314b1d1d41461014e5780631e5c016d14610161575b600080fd5b61013961013436600461142e565b610344565b005b610139610149366004611463565b6104e2565b61013961015c36600461142e565b61050c565b61017461016f366004611485565b610688565b60405161018191906114e2565b60405180910390f35b6101f361019836600461142e565b60076020819052600091825260409091208054600182015460048301546005840154600685015494909501546001600160a01b0393841695929093169360ff8083169461010084048216946201000090940490911692919088565b604080516001600160a01b03998a1681529890971660208901529415159587019590955291151560608601521515608085015260a084015260c083019190915260e082015261010001610181565b610174610954565b60045461025c906001600160a01b031681565b6040516001600160a01b039091168152602001610181565b60025461025c906001600160a01b031681565b60015461025c906001600160a01b031681565b6101396102a8366004611463565b610b70565b6102b660065481565b604051908152602001610181565b610139610b9a565b6000546001600160a01b031661025c565b6101396102eb366004611463565b610bae565b60035461025c906001600160a01b031681565b60055461025c906001600160a01b031681565b6006546102b6565b61013961032c36600461162a565b610bd8565b61013961033f366004611463565b610e4d565b60055460405163ce03ba1560e01b81523360048201526001600160a01b039091169063ce03ba1590602401602060405180830381865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b091906116ab565b6104015760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c7920536f6369616c4e6f64652063616e20617070726f7665000000000060448201526064015b60405180910390fd5b6000818152600760205260409020600481015460ff1615801561042e57506004810154610100900460ff16155b6104745760405162461bcd60e51b8152602060048201526017602482015276151c98591948185b1c9958591e481c1c9bd8d95cdcd959604a1b60448201526064016103f8565b60048101805460ff19166001908117909155810180546001600160a01b031916339081179091556040517f642ea0b1d63cc70f38e39719b589ae0a9a111ef74ae825093d1574009bdf4e29906104cd9085815260200190565b60405180910390a26104de82610ec6565b5050565b6104ea6112b9565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60055460405163ce03ba1560e01b81523360048201526001600160a01b039091169063ce03ba1590602401602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057891906116ab565b6105c45760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7920536f6369616c4e6f64652063616e2072656a65637400000000000060448201526064016103f8565b6000818152600760205260409020600481015460ff161580156105f157506004810154610100900460ff16155b6106375760405162461bcd60e51b8152602060048201526017602482015276151c98591948185b1c9958591e481c1c9bd8d95cdcd959604a1b60448201526064016103f8565b60048101805461ff00191661010017905560405133907f1467d10b347736e8967d42852d25e3181fd4c70dcd2df433c27e02c051e2ab199061067c9085815260200190565b60405180910390a25050565b606060008311801561069a5750600082115b6106f45760405162461bcd60e51b815260206004820152602560248201527f5061676520616e64206c696d6974206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016103f8565b6000826107026001866116e3565b61070c91906116f6565b90506006548110610751576040805160008082526020820190925290610748565b610735611363565b81526020019060019003908161072d5790505b5091505061094e565b60065483906107619083906116e3565b811115610779578160065461077691906116e3565b90505b60008167ffffffffffffffff8111156107945761079461170d565b6040519080825280602002602001820160405280156107cd57816020015b6107ba611363565b8152602001906001900390816107b25790505b50905060005b8281101561094857600760006107e98387611723565b8152602080820192909252604090810160002081516101408101835281546001600160a01b0390811682526001830154168185015260028201805484518187028101870186528181529295939486019383018282801561086857602002820191906000526020600020905b815481526020019060010190808311610854575b50505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156108c057602002820191906000526020600020905b8154815260200190600101908083116108ac575b5050509183525050600482015460ff80821615156020840152610100820481161515604084015262010000909104161515606082015260058201546080820152600682015460a082015260079091015460c090910152825183908390811061092a5761092a611736565b602002602001018190525080806109409061174c565b9150506107d3565b50925050505b92915050565b6060600060065467ffffffffffffffff8111156109735761097361170d565b6040519080825280602002602001820160405280156109ac57816020015b610999611363565b8152602001906001900390816109915790505b5090506000805b600654811015610b685760008181526007602052604090206004015460ff161580156109f65750600081815260076020526040902060040154610100900460ff16155b15610b565760008181526007602090815260409182902082516101408101845281546001600160a01b0390811682526001830154168184015260028201805485518186028101860187528181529295939493860193830182828015610a7a57602002820191906000526020600020905b815481526020019060010190808311610a66575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610ad257602002820191906000526020600020905b815481526020019060010190808311610abe575b5050509183525050600482015460ff80821615156020840152610100820481161515604084015262010000909104161515606082015260058201546080820152600682015460a082015260079091015460c0909101528351849084908110610b3c57610b3c611736565b60200260200101819052508180610b529061174c565b9250505b80610b608161174c565b9150506109b3565b509092915050565b610b786112b9565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610ba26112b9565b610bac6000611313565b565b610bb66112b9565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828114610c1b5760405162461bcd60e51b81526020600482015260116024820152704d69736d61746368656420696e7075747360781b60448201526064016103f8565b82610c5d5760405162461bcd60e51b8152602060048201526012602482015271139bc81dd85cdd19481cdd589b5a5d1d195960721b60448201526064016103f8565b604051806101400160405280866001600160a01b0316815260200160006001600160a01b031681526020018585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208581028281018201909352858252928301929091869186918291850190849080828437600092018290525093855250505060208083018290526040808401839052606084018390526080840183905260a0840183905260c090930182905260065482526007815290829020835181546001600160a01b039182166001600160a01b031991821617835585840151600184018054919093169116179055918301518051610d7692600285019201906113ce565b5060608201518051610d929160038401916020909101906113ce565b50608082015160048201805460a085015160c086015161ffff1990921693151561ff0019169390931761010093151584021762ff00001916620100009115159190910217905560e08301516005830155820151600680830191909155610120909201516007909101555460405190815233907fef672b28bae6a730424a771e68963a9574c78dddaf507e3d293452dc20a260129060200160405180910390a260068054906000610e418361174c565b91905055505050505050565b610e556112b9565b6001600160a01b038116610eba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f8565b610ec381611313565b50565b6000818152600760205260409020600481015460ff16610f1d5760405162461bcd60e51b8152602060048201526012602482015271151c985919481b9bdd08185c1c1c9bdd995960721b60448201526064016103f8565b600481015462010000900460ff1615610f705760405162461bcd60e51b8152602060048201526015602482015274151c98591948185b1c9958591e481cd95d1d1b1959605a1b60448201526064016103f8565b6000806000805b6002850154811015611118576000856002018281548110610f9a57610f9a611736565b906000526020600020015490506000866003018381548110610fbe57610fbe611736565b6000918252602082200154600354604051637d33fce560e11b8152600481018690529193506001600160a01b03169063fa67f9ca90602401602060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190611765565b60048054604051630c7924eb60e41b81529182018690529192506000916001600160a01b03169063c7924eb090602401602060405180830381865afa158015611084573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a89190611765565b90506127106110b782856116f6565b6110c990670de0b6b3a76400006116f6565b6110d3919061177e565b6110dd9089611723565b97506110e982846116f6565b6110f39088611723565b96506110ff8187611723565b95505050505080806111109061174c565b915050610f77565b5060078401819055600684018290556005840183905560025484546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f1990604401600060405180830381600087803b15801561117d57600080fd5b505af1158015611191573d6000803e3d6000fd5b5050600154865460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018790529116925063a9059cbb91506044016020604051808303816000875af11580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d91906116ab565b6112505760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016103f8565b60048401805462ff0000191662010000179055835460408051878152602081018690529081018490526001600160a01b03909116907f98a9235cb534a334d5bda2d01cfec7ffb1e9ae4f4ba7f364922dc800fbcb1f599060600160405180910390a25050505050565b6000546001600160a01b03163314610bac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b828054828255906000526020600020908101928215611409579160200282015b828111156114095782518255916020019190600101906113ee565b50611415929150611419565b5090565b5b80821115611415576000815560010161141a565b60006020828403121561144057600080fd5b5035919050565b80356001600160a01b038116811461145e57600080fd5b919050565b60006020828403121561147557600080fd5b61147e82611447565b9392505050565b6000806040838503121561149857600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b838110156114d7578151875295820195908201906001016114bb565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156115d057888303603f19018552815180516001600160a01b03168452610140818901516001600160a01b038116868b015250878201518189870152611554828701826114a7565b9150506060808301518683038288015261156e83826114a7565b925050506080808301516115858288018215159052565b505060a08281015115159086015260c08083015115159086015260e0808301519086015261010080830151908601526101209182015191909401529386019390860190600101611509565b509098975050505050505050565b60008083601f8401126115f057600080fd5b50813567ffffffffffffffff81111561160857600080fd5b6020830191508360208260051b850101111561162357600080fd5b9250929050565b60008060008060006060868803121561164257600080fd5b61164b86611447565b9450602086013567ffffffffffffffff8082111561166857600080fd5b61167489838a016115de565b9096509450604088013591508082111561168d57600080fd5b5061169a888289016115de565b969995985093965092949392505050565b6000602082840312156116bd57600080fd5b8151801515811461147e57600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561094e5761094e6116cd565b808202811582820484141761094e5761094e6116cd565b634e487b7160e01b600052604160045260246000fd5b8082018082111561094e5761094e6116cd565b634e487b7160e01b600052603260045260246000fd5b60006001820161175e5761175e6116cd565b5060010190565b60006020828403121561177757600080fd5b5051919050565b60008261179b57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204291b7ea264fe66b6fc07392793d77e62918b67ffa3a11689b973f7602a43e2b64736f6c63430008130033";

type WasteSettlementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WasteSettlementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WasteSettlement__factory extends ContractFactory {
  constructor(...args: WasteSettlementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdc: PromiseOrValue<string>,
    _wasteToken: PromiseOrValue<string>,
    _wastePriceProvider: PromiseOrValue<string>,
    _wasteDataProvider: PromiseOrValue<string>,
    _socialNodeRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WasteSettlement> {
    return super.deploy(
      _usdc,
      _wasteToken,
      _wastePriceProvider,
      _wasteDataProvider,
      _socialNodeRegistry,
      overrides || {}
    ) as Promise<WasteSettlement>;
  }
  override getDeployTransaction(
    _usdc: PromiseOrValue<string>,
    _wasteToken: PromiseOrValue<string>,
    _wastePriceProvider: PromiseOrValue<string>,
    _wasteDataProvider: PromiseOrValue<string>,
    _socialNodeRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _usdc,
      _wasteToken,
      _wastePriceProvider,
      _wasteDataProvider,
      _socialNodeRegistry,
      overrides || {}
    );
  }
  override attach(address: string): WasteSettlement {
    return super.attach(address) as WasteSettlement;
  }
  override connect(signer: Signer): WasteSettlement__factory {
    return super.connect(signer) as WasteSettlement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WasteSettlementInterface {
    return new utils.Interface(_abi) as WasteSettlementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WasteSettlement {
    return new Contract(address, _abi, signerOrProvider) as WasteSettlement;
  }
}
