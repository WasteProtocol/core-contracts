/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  WasteDataProvider,
  WasteDataProviderInterface,
} from "../WasteDataProvider";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "emissionRate",
        type: "uint256",
      },
    ],
    name: "CategoryAddedOrUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
    ],
    name: "CategoryRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "WasteTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "WasteTypeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "WasteTypeUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "emissionRate",
        type: "uint256",
      },
    ],
    name: "addOrUpdateCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addWasteTypeToCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "getCategoryByWasteType",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "emissionRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct WasteDataProvider.WasteType[]",
            name: "wasteTypes",
            type: "tuple[]",
          },
        ],
        internalType: "struct WasteDataProvider.WasteCategory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
    ],
    name: "getWasteTypes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct WasteDataProvider.WasteType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
    ],
    name: "removeCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
    ],
    name: "removeWasteType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wasteTypeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "updateWasteType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "wasteCategories",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "emissionRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "wasteTypeToCategory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163317905561136e806100326000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c142c4f111610071578063c142c4f11461014c578063e84abf9f1461017a578063ecbcf35d1461018d578063ed3281b0146101a0578063ed82dd4d146101c0578063f2fde38b146101d357600080fd5b806350de1bc3146100ae57806365da2bb5146100d75780637918d196146100ec57806380420b311461010e5780638da5cb5b14610121575b600080fd5b6100c16100bc366004610e39565b6101e6565b6040516100ce9190610e9f565b60405180910390f35b6100ea6100e5366004610fec565b610408565b005b6100ff6100fa366004610e39565b610502565b6040516100ce9392919061103c565b6100ea61011c366004610e39565b6105ad565b600254610134906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b61016c61015a366004610e39565b60016020526000908152604090205481565b6040519081526020016100ce565b6100ea610188366004610e39565b6106c6565b6100ea61019b366004611065565b6108d7565b6101b36101ae366004610e39565b610a55565b6040516100ce91906110ac565b6100ea6101ce366004611120565b610b83565b6100ea6101e1366004611170565b610c10565b6102116040518060800160405280600081526020016060815260200160008152602001606081525090565b600082815260016020526040812054908190036102495760405162461bcd60e51b8152600401610240906111a0565b60405180910390fd5b6000818152602081815260409182902082516080810190935280548352600181018054919284019161027a906111ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102a6906111ea565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156103f9578382906000526020600020906002020160405180604001604052908160008201548152602001600182018054610368906111ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610394906111ea565b80156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b5050505050815250508152602001906001019061032b565b50505091525090949350505050565b6002546001600160a01b031633146104325760405162461bcd60e51b815260040161024090611224565b600083815260208190526040812080549091036104615760405162461bcd60e51b81526004016102409061124c565b6040805180820190915283815260208082018481526003840180546001818101835560009283529184902085516002909202019081559151805185946104ab938501920190610ca4565b505050600084815260016020526040908190208690555185907f12ef3d93f2e9abbb1f9f484574d0f8c78c689c0ef33812443688fbc5851bb27b906104f39087908790611283565b60405180910390a25050505050565b60006020819052908152604090208054600182018054919291610524906111ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610550906111ea565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b5050505050908060020154905083565b6002546001600160a01b031633146105d75760405162461bcd60e51b815260040161024090611224565b600081815260208190526040812080549091036106065760405162461bcd60e51b81526004016102409061124c565b60005b600382015481101561065d57600082600301828154811061062c5761062c6112a4565b6000918252602080832060029092029091015482526001905260408120555080610655816112d0565b915050610609565b5060008281526020819052604081208181559061067d6001830182610d28565b60028201600090556003820160006106959190610d65565b505060405182907faf870895aa6217ac2ea81b64ac63c84362eb51f9b6a49e12df4843c08140528190600090a25050565b6002546001600160a01b031633146106f05760405162461bcd60e51b815260040161024090611224565b6000818152600160205260408120549081900361071f5760405162461bcd60e51b8152600401610240906111a0565b600081815260208190526040812090805b60038301548110156108405784836003018281548110610752576107526112a4565b9060005260206000209060020201600001540361082e5760038301805461077b906001906112e9565b8154811061078b5761078b6112a4565b90600052602060002090600202018360030182815481106107ae576107ae6112a4565b90600052602060002090600202016000820154816000015560018201816001019080546107da906111ea565b6107e5929190610d86565b505050600383018054806107fb576107fb611300565b600082815260208120600260001990930192830201818155906108216001830182610d28565b5050905560019150610840565b80610838816112d0565b915050610730565b50806108845760405162461bcd60e51b815260206004820152601360248201527215d85cdd19551e5c19481b9bdd08199bdd5b99606a1b6044820152606401610240565b600084815260016020526040808220919091555183907f2e534165d95a077e934186a0d2e4888922aad056aa2e4de3d07bf9776fd12843906108c99087815260200190565b60405180910390a250505050565b6002546001600160a01b031633146109015760405162461bcd60e51b815260040161024090611224565b600082815260016020526040812054908190036109305760405162461bcd60e51b8152600401610240906111a0565b600081815260208190526040812090805b6003830154811015610a0a5785836003018281548110610963576109636112a4565b906000526020600020906002020160000154036109f85784836003018281548110610990576109906112a4565b906000526020600020906002020160010190805190602001906109b4929190610ca4565b5060019150837f9f94e243545255638001f9cd43579c59b0e0b109a39b882d895494773dc0fdf587876040516109eb929190611283565b60405180910390a2610a0a565b80610a02816112d0565b915050610941565b5080610a4e5760405162461bcd60e51b815260206004820152601360248201527215d85cdd19551e5c19481b9bdd08199bdd5b99606a1b6044820152606401610240565b5050505050565b6000818152602081905260408120805460609203610a855760405162461bcd60e51b81526004016102409061124c565b80600301805480602002602001604051908101604052809291908181526020016000905b82821015610b77578382906000526020600020906002020160405180604001604052908160008201548152602001600182018054610ae6906111ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610b12906111ea565b8015610b5f5780601f10610b3457610100808354040283529160200191610b5f565b820191906000526020600020905b815481529060010190602001808311610b4257829003601f168201915b50505050508152505081526020019060010190610aa9565b50505050915050919050565b6002546001600160a01b03163314610bad5760405162461bcd60e51b815260040161024090611224565b60008381526020818152604090912084815583519091610bd4916001840191860190610ca4565b50818160020181905550837f25d5a29a0c93e784e6a9b342a16cf7e550a9d8048e0ece74363a6d757a027b5884846040516108c9929190611316565b6002546001600160a01b03163314610c3a5760405162461bcd60e51b815260040161024090611224565b6001600160a01b038116610c825760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610240565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b828054610cb0906111ea565b90600052602060002090601f016020900481019282610cd25760008555610d18565b82601f10610ceb57805160ff1916838001178555610d18565b82800160010185558215610d18579182015b82811115610d18578251825591602001919060010190610cfd565b50610d24929150610e01565b5090565b508054610d34906111ea565b6000825580601f10610d44575050565b601f016020900490600052602060002090810190610d629190610e01565b50565b5080546000825560020290600052602060002090810190610d629190610e16565b828054610d92906111ea565b90600052602060002090601f016020900481019282610db45760008555610d18565b82601f10610dc55780548555610d18565b82800160010185558215610d1857600052602060002091601f016020900482015b82811115610d18578254825591600101919060010190610de6565b5b80821115610d245760008155600101610e02565b80821115610d24576000808255610e306001830182610d28565b50600201610e16565b600060208284031215610e4b57600080fd5b5035919050565b6000815180845260005b81811015610e7857602081850181015186830182015201610e5c565b81811115610e8a576000602083870101525b50601f01601f19169290920160200192915050565b60006020808352835181840152808401516040608081860152610ec560a0860183610e52565b91508086015160608601526060860151601f19808785030160808801528382518086528686019150868160051b870101878501945060005b82811015610f3a5787820385018452855180518352890151898301889052610f2788840182610e52565b968a0196948a0194925050600101610efd565b509a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f7057600080fd5b813567ffffffffffffffff80821115610f8b57610f8b610f49565b604051601f8301601f19908116603f01168101908282118183101715610fb357610fb3610f49565b81604052838152866020858801011115610fcc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561100157600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561102657600080fd5b61103286828701610f5f565b9150509250925092565b8381526060602082015260006110556060830185610e52565b9050826040830152949350505050565b6000806040838503121561107857600080fd5b82359150602083013567ffffffffffffffff81111561109657600080fd5b6110a285828601610f5f565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561111257888303603f190185528151805184528701518784018790526110ff87850182610e52565b95880195935050908601906001016110d3565b509098975050505050505050565b60008060006060848603121561113557600080fd5b83359250602084013567ffffffffffffffff81111561115357600080fd5b61115f86828701610f5f565b925050604084013590509250925092565b60006020828403121561118257600080fd5b81356001600160a01b038116811461119957600080fd5b9392505050565b6020808252602a908201527f576173746554797065206e6f74206173736f636961746564207769746820616e604082015269792063617465676f727960b01b606082015260800190565b600181811c908216806111fe57607f821691505b60208210810361121e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b60208082526017908201527f43617465676f727920646f6573206e6f74206578697374000000000000000000604082015260600190565b82815260406020820152600061129c6040830184610e52565b949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112e2576112e26112ba565b5060010190565b6000828210156112fb576112fb6112ba565b500390565b634e487b7160e01b600052603160045260246000fd5b6040815260006113296040830185610e52565b9050826020830152939250505056fea2646970667358221220a1a5759cb94549cbbbf2331a4100ac73f8221457b2055e836bab8d87ab2db94c64736f6c634300080e0033";

type WasteDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WasteDataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WasteDataProvider__factory extends ContractFactory {
  constructor(...args: WasteDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WasteDataProvider> {
    return super.deploy(overrides || {}) as Promise<WasteDataProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WasteDataProvider {
    return super.attach(address) as WasteDataProvider;
  }
  override connect(signer: Signer): WasteDataProvider__factory {
    return super.connect(signer) as WasteDataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WasteDataProviderInterface {
    return new utils.Interface(_abi) as WasteDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WasteDataProvider {
    return new Contract(address, _abi, signerOrProvider) as WasteDataProvider;
  }
}
